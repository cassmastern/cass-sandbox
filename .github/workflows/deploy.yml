name: Deploy MkDocs to GitHub Pages

on:
  push:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          tags: my-mkdocs-project:latest
          load: true
          
      - name: Build MkDocs site
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/app \
            -w /app \
            my-mkdocs-project:latest \
            mkdocs build --verbose
      
      - name: Verify MkDocs output
        run: |
          if [ ! -d "./site" ]; then
            echo "ERROR: MkDocs output folder './site' not found."
            echo "Available directories:"
            ls -la ./
            echo "Checking if build failed..."
            exit 1
          fi
          
          # Check if site has essential files
          if [ ! -f "./site/index.html" ]; then
            echo "ERROR: No index.html found in site directory"
            echo "Site contents:"
            ls -la ./site/
            exit 1
          fi
          
          echo "SUCCESS: Site built with $(find ./site -name "*.html" | wc -l) HTML files"
          
          # Verify JavaScript and CSS files are included
          echo "Checking JavaScript files:"
          find ./site -name "*.js" | head -10
          echo "Checking CSS files:"
          find ./site -name "*.css" | head -10
          
          # Check if our custom files are present
          if [ ! -f "./site/js/alt-processor.js" ]; then
            echo "WARNING: alt-processor.js not found in build output"
          else
            echo "✅ alt-processor.js found in build output"
          fi
          
          if [ ! -f "./site/js/diagram-zoom.js" ]; then
            echo "WARNING: diagram-zoom.js not found in build output"
          else
            echo "✅ diagram-zoom.js found in build output"
          fi
          
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        